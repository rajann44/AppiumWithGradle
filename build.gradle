plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'io.appium', name: 'java-client', version: '7.5.1'
    implementation group: 'org.testng', name: 'testng', version: '7.3.0'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    implementation group: 'com.aventstack', name: 'extentreports', version: '4.1.7'
}

test {
    //useDefaultListeners = true // Tells TestNG to execute its default reporting structure
    //includeGroups 'Regression' // We define the group name by using ‘includeGroups’ parameter.
    //excludeGroups 'Smoke' //Mention the group names to not include

    //suites 'src/test/testng.xml' //location of our suite.xml

    def runSuite = project.hasProperty("suite")

    useTestNG(){

        if (runSuite) {
            // If parameter was passed in, use it in the 'suites' command
            def suiteToRun = project.getProperty("suite")
            suites "src/test/"+suiteToRun
        } else {
            suites 'src/test/testng.xml'
        }

        // listen to events in the test execution lifecycle
        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        // enable console logging of test results
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }

        // Fail the 'test' task on the first test failure
        failFast = true

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
        }

    }
}